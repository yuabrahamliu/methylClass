% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiomics.R
\name{mainpredict}
\alias{mainpredict}
\title{Predict sample labels}
\usage{
mainpredict(
  newdat,
  mod,
  calibratemod = NULL,
  y = NULL,
  cores = 1,
  baselearnerpath = NULL
)
}
\arguments{
\item{newdat}{The data with sample labels need to be predicted. Each raw is
a sample and each column is a feature.}

\item{mod}{The raw model trained by the function \code{maintrain}. It is in
the slot named "mod" of the result retured by \code{maintain}.}

\item{calibratemod}{The calibration model trained by \code{maintrain}, and
it can be NULL if only want to predict the labels using the raw model. The
default is NULL. If want to provide, it can be obtained from the result of
\code{maintrain}. The slot "platt.calfits" contains the logistic model,
the slot "platt.brglm.calfits" contains the Firth's model, and the slot
"glmnet.calfit" contains the ridge model. Choose one of them to transfer
to this parameter and the calibration model will be used to predict the
sample labels.}

\item{y}{Not necessary but if the labels of the new samples are actually
known, they can transfer to this parameter as a vector and then they will
be used to compare with the predicted labels to evaluation the prediction
performance.}

\item{cores}{The threads number need to do parallization computation and it
only works for eSVM and eNeural prediction, but even no parallization is
used here, the prediction speed is still not slow. Default is 1.}

\item{baselearnerpath}{Special for prediction using the eNeural model. This
is the absolute path saving the base learner neural network model files.
The function \code{maintrain} will create a folder in the working path
with the base learner neural network model files saved there when eNeural
model is trained and the path of this folder need to be provided to the
parameter \code{baselearnerpath} here to predict the labels using eNeural.}
}
\value{
Will return a list containing the score matrix for the new samples,
and the final predicted labels in a vector. These results from the raw
model will always be contained in the list, and if a calibration model is
also provided to the function, the probability matrix and the labels from
the calibration model will also be in the list.
}
\description{
Predict sample labels using the trained model
}
\examples{
library(methylClass)

labels <- system.file('extdata', 'testlabels.rds', package = 'methylClass')
labels <- readRDS(labels)

betas <- system.file('extdata', 'testbetas.rds', package = 'methylClass')
betas <- readRDS(betas)

RFmods <- maintrain(y.. = labels, betas.. = betas, subset.CpGs = 10000, 
 seed = 1234, method = 'RF', calibrationmethod = c('LR', 'FLR', 'MR'), 
 cores = 4)

RFpres <- mainpredict(newdat = betas, mod = RFmods$mod, 
 calibratemod = RFmods$glmnet.calfit, y = NULL, cores = 1)

\dontrun{
eSVMmods <- maintrain(y.. = labels, betas.. = betas, subset.CpGs = 10000, 
 seed = 1234, method = 'eSVM', calibrationmethod = c('LR', 'FLR', 'MR'), 
 cores = 10)
 
eSVMpres <- mainpredict(newdat = betas, mod = eSVMmods$mod, 
 calibratemod = eSVMmods$glmnet.calfit, y = NULL, cores = 1)
}
}
