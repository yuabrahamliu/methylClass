% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/machinelearning.R
\name{cvdata}
\alias{cvdata}
\title{Generate the data matrices for the cross validation loops}
\usage{
cvdata(
  y = NULL,
  betas = NULL,
  fpath.betas,
  topfeaturenumber = 50000,
  n.cv.folds = 5,
  seed = 1234,
  normalcv = FALSE,
  nfolds.. = NULL,
  out.path = "betas.train.test.filtered",
  out.fname.prefix = "betas"
)
}
\arguments{
\item{y}{The true labels of the samples. Can be a vector or factor. Each of
its element is a label for a sample and the element order in it should be
the same as the sample order in the data matrix provided to this function
via the parameter \code{betas}. If the parameter \code{nfolds..} is not
NULL, this parameter is not necessary.}

\item{betas}{The beta value matrix of the samples. Each row is one sample
and each column is one feature. It can also be set as NULL, and in this
case, the function will read the data by the directory \code{fpath.betas}.
The absolute path of the file of these data should be provided by the
parameter \code{fpath.betas}.}

\item{fpath.betas}{If the parameter \code{betas} is NULL, this parameter is
necessary to provide the file path of the betas matrix data, so that the
function will read the data from this path. It should be an absolute path
string, and the file should be an .rds file.}

\item{topfeaturenumber}{It is used to set the prescreened feature number so
that before the training/testing sets division, the data features will be
reduced to only the top variable ones and the number of these retained top
variable features is \code{topfeaturenumber}. Default is 50000. It can be
set as NULL too, so that no precreen will be done on the data.}

\item{n.cv.folds}{A numeric number and the default value is 5, so that if
the parameter \code{normalcv} is set as TRUE, a 5 fold cross validation
will be set up, and if \code{normalcv} is FALSE, a 5 by 5 nested cross
validation will be set up. This parameter only works if \code{y} is not
NULL.}

\item{seed}{The random seed for the sampling process to assign samples to
different cross validation loops. Default is 1234.}

\item{normalcv}{Indicating whether the cross validation loops are normal or
nested. Default is FALSE, meaning nested cross validation.}

\item{nfolds..}{If the parameter \code{n.cv.folds} or \code{y} is NULL, the
training/testing sets need to be divided following the cross validation
structure provided by this parameter and it is the result of the function
\code{makecv}, but if it is also NULL, and there is such a data structure
named "nfolds" in the environment, it will be loaded by the function and
use it to divide the training/testing sets.}

\item{out.path}{For all the cross validation loops, their beta value matrix
files will be saved in the folder set by this parameter. It is the folder
name will be created in the current working directory, so a relative not
absolute path.}

\item{out.fname.prefix}{The beta value matrix files of the cross validation
loops will be saved in the folder set by the parameter \code{out.path} and
the name prefix of the files need to be set by this parameter.}
}
\value{
The beta value matrix files for the cross validation loops will be
saved in the directory set by \code{out.path}, and each cross validation
loop will have an .RData file saved there, with the beta value matrices
for the training set and testing set, and the list indicating the training
and testing sample indexes of that loop in it. The absolute directory of
the folder can be transferred to the function \code{maincv} to construct
and evaluate the model performance via cross validation.
}
\description{
Generate the training and testing data matrices for all the cross validation
loops.
}
\examples{
library(methylClass)

labels <- system.file('extdata', 'testlabels.rds', package = 'methylClass')
labels <- readRDS(labels)

betas <- system.file('extdata', 'testbetas.rds', package = 'methylClass')
betas <- readRDS(betas)

cvdata(y = labels, betas = betas, topfeaturenumber = 10000, n.cv.folds = 5,
 seed = 1234, normalcv = FALSE, out.path = 'betas.train.test.filtered',
 out.fname.prefix = 'betas')
}
