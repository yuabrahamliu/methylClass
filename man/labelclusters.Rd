% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assistant.R
\name{labelclusters}
\alias{labelclusters}
\title{Integrate the sample labels and the DBSCAN clustering results and keep the
samples with a matching relationship between them}
\usage{
labelclusters(tsnedat, classlabels, eps, minPts, cutoff)
}
\arguments{
\item{tsnedat}{A matrix recording the sample coordinates in a  2-dimensional
tSNE embedding. It should contain 2 columns, and each one corresponds the
sample coordinates of one dimension. The row names are the sample names.}

\item{classlabels}{A vector or factor recording the sample labels, and label
order should correspond to the sample order in the \code{tsnedat} matrix.}

\item{eps}{The epsilon parameter for DBSCAN to cluster the samples according
to their tSNE coordinates.}

\item{cutoff}{A float number between 0 and 1. To screen for samples with a
matching relationship between their class labels and DBSCAN clusters, if a
DBSCAN cluster has samples with the same class label, and their percetage
is greater than this cutoff, this cluster will be kept, while a cluster
without so many dominant samples will be discarded. Then, for the dominant
clusters, the minor samples in them will also be dropped. Thus, the final
clusters will only contain the dominant samples.}

\item{minPtses}{The minimum cluster points parameter for DBSCAN to cluster
the samples according to their tSNE coordinates.}
}
\value{
A list with 3 slots will be returned. The slot named "samplenames"
contains the reserved sample names after the filtering. Another slot named
"dbscanlabels" contains the DBSCAN cluster IDs for all the samples. The
slot named "classlabels" contains the class labels of all the samples.
}
\description{
Integrate the sample labels and the DBSCAN clustering results and keep the
samples with a matching relationship between them.
}
\examples{
library(methylClass)

labels <- system.file('extdata', 'testlabels.rds', package = 'methylClass')
labels <- readRDS(labels)

betas <- system.file('extdata', 'testbetas.rds', package = 'methylClass')
betas <- readRDS(betas)

top1k <- mainfeature(betas.. = betas, subset.CpGs = 1000, cores = 4, 
 topfeaturenumber = 50000)

omicslist = list(methyl = betas[,top1k$features])

library(reticulate)

pypath <- py_exe()

jvisres <- mainJvisR(datlist = omicslist, labels = labels, 
 random_state = 1234, pythonpath = pypath)

optparams <- clustergrid(tsnedat = jvisres$JSNE, epses = seq(0.25, 5, 0.25), 
 minPtses = seq(2, 21, 1), cutoff = 0.75, classlabels = labels)
 
clusterres <- labelclusters(tsnedat = jvisres$JSNE, classlabels = labels, 
 eps = optparams[['eps']], minPts = optparams[['minPts']], cutoff = 0.75)
}
